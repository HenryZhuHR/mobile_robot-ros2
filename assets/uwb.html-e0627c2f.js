import{_ as e,o as a,c as r,e as d}from"./app-691e7cc7.js";const i={},h=d('<h1 id="uwb-py-user-guide" tabindex="-1"><a class="header-anchor" href="#uwb-py-user-guide" aria-hidden="true">#</a> uwb.py user guide</h1><p>目录: <code>tests/uwb.py</code></p><h1 id="🍽️-准备工作" tabindex="-1"><a class="header-anchor" href="#🍽️-准备工作" aria-hidden="true">#</a> 🍽️ 准备工作</h1><h3 id="导入uwb-py" tabindex="-1"><a class="header-anchor" href="#导入uwb-py" aria-hidden="true">#</a> 导入uwb.py</h3><ul><li>需要安装pyserial</li></ul><h1 id="📦-功能包" tabindex="-1"><a class="header-anchor" href="#📦-功能包" aria-hidden="true">#</a> 📦 功能包</h1><h2 id="pc端初始化串口📦" tabindex="-1"><a class="header-anchor" href="#pc端初始化串口📦" aria-hidden="true">#</a> PC端初始化串口📦</h2><h3 id="def-uwb-ser-init-port-com12-baud-rate-115200" tabindex="-1"><a class="header-anchor" href="#def-uwb-ser-init-port-com12-baud-rate-115200" aria-hidden="true">#</a> def uwb_ser_init(port=&quot;COM12&quot;, baud_rate=115200):</h3><h3 id="return-ser" tabindex="-1"><a class="header-anchor" href="#return-ser" aria-hidden="true">#</a> return ser</h3><ul><li>从设备管理器查看COM端口</li><li>波特率默认为115200</li><li>返回串口句柄</li></ul><h2 id="关闭串口📦" tabindex="-1"><a class="header-anchor" href="#关闭串口📦" aria-hidden="true">#</a> 关闭串口📦</h2><h3 id="def-uwb-ser-close-ser" tabindex="-1"><a class="header-anchor" href="#def-uwb-ser-close-ser" aria-hidden="true">#</a> def uwb_ser_close(ser)</h3><ul><li>ser就是刚才初始化后得到的串口句柄</li></ul><h2 id="串口得到uwb传回的原始有效数据📦" tabindex="-1"><a class="header-anchor" href="#串口得到uwb传回的原始有效数据📦" aria-hidden="true">#</a> 串口得到uwb传回的原始有效数据📦</h2><h3 id="def-uwb-get-valid-data-ser-verbose-false" tabindex="-1"><a class="header-anchor" href="#def-uwb-get-valid-data-ser-verbose-false" aria-hidden="true">#</a> def uwb_get_valid_data(ser, verbose=False):</h3><h3 id="return-return-x-y-z-da-db-dc-dd" tabindex="-1"><a class="header-anchor" href="#return-return-x-y-z-da-db-dc-dd" aria-hidden="true">#</a> return return X, Y, Z, DA, DB, DC, DD</h3><ul><li>verbose打开会回传串口接收到的数据，16进制显示</li><li>返回X，Y，Z二维定位坐标值，DA，DB，DC，DD是距离4个基站的距离</li></ul><h2 id="得到滤波后的稳定坐标值📦" tabindex="-1"><a class="header-anchor" href="#得到滤波后的稳定坐标值📦" aria-hidden="true">#</a> 得到滤波后的稳定坐标值📦</h2><h3 id="def-uwb-get-loc-ser-ave-cap-10-filter-size-2" tabindex="-1"><a class="header-anchor" href="#def-uwb-get-loc-ser-ave-cap-10-filter-size-2" aria-hidden="true">#</a> def uwb_get_loc(ser, ave_cap=10, filter_size=2):</h3><h3 id="return-xyz-ave" tabindex="-1"><a class="header-anchor" href="#return-xyz-ave" aria-hidden="true">#</a> return xyz_ave</h3><ul><li>ave_cap是一次性要处理的从串口接收并存储的数据容量，如果过大会有延时效应</li><li>filter_size是滤波核的大小，一般要小于ave_cap/2</li><li>返回的是一个列表xyz_ave = [x_coor, y_coor, z_coor]</li></ul>',21),t=[h];function s(u,n){return a(),r("div",null,t)}const c=e(i,[["render",s],["__file","uwb.html.vue"]]);export{c as default};
